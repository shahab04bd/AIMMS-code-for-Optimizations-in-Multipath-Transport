
The inputs are:

    V := data { a, b, c, d, e, f, g, h } ;
 
    A := data { ( a, b ), ( a, c ), ( b, d ), ( b, e ), ( c, g ), ( d, f ), ( e, f ), ( f, h ), ( g, h ) } ;
 
 
    cap := data
    { ( a, b ) : 25,  ( a, c ) : 15,  ( b, d ) : 10,  ( b, e ) : 10,  ( c, g ) : 20,  ( d, f ) : 15,  ( e, f ) : 15,  ( f, h ) : 25,
  ( g, h ) : 15 } ;
 
    K := data { ( a, h ), ( c, h ) } ;
 
The outputs are:

    FlowSUM := 27.500 ;
 
    spliting_node := data { ( a, h ) : 1 } ;
 
 
    sf_share := data
    { ( a, b, a, b, a, h ) : 10.000,  ( a, b, b, e, a, h ) : 10.000,  ( a, b, e, f, a, h ) : 10.000,
      ( a, b, f, h, a, h ) : 10.000,  ( a, c, a, c, a, h ) :  2.500,  ( a, c, c, g, a, h ) :  2.500,
      ( a, c, g, h, a, h ) :  2.500 } ;
 
    rcv_int := data { ( a, h ) : 2,  ( c, h ) : 1 } ;
 
 
    sf_count := data
    { ( a, b, a, h ) : 1,  ( a, c, a, h ) : 1,  ( b, e, a, h ) : 1,  ( c, g, a, h ) : 1,  ( e, f, a, h ) : 1,  ( f, h, a, h ) : 1,
      ( g, h, a, h ) : 1 } ;
 
 
    sf_link_share := data
    { ( a, b, a, h ) : 17.497,  ( a, c, a, h ) : 10.000,  ( b, d, a, h ) :  7.456,  ( b, e, a, h ) : 10.000,
      ( c, g, a, h ) :  2.500,  ( d, f, a, h ) :  7.463,  ( e, f, a, h ) : 12.497,  ( f, h, a, h ) : 22.496,
      ( g, h, a, h ) :  2.500 } ;
 
    max_sf_val := data { ( a, h ) : 10 } ;
 
    multipath_gain := data { ( a, h ) : 2.500 } ;
 
    net_diff := 0 ;
 
    phi := data { ( a, h ) : 12.500,  ( c, h ) : 12.500 } ;
 
    y := data { ( b, e, a, h ) : 1,  ( g, h, a, h ) : 1,  ( g, h, c, h ) : 1 } ;
 
    sf_bneck := data { ( a, b, b, e, a, h ) : 1,  ( a, c, g, h, a, h ) : 1 } ;
 
 
    f := data
    { ( a, b, a, h ) : 10.000,  ( a, c, a, h ) :  2.500,  ( b, e, a, h ) : 10.000,  ( c, g, a, h ) :  2.500,
      ( c, g, c, h ) : 12.500,  ( e, f, a, h ) : 10.000,  ( f, h, a, h ) : 10.000,  ( g, h, a, h ) :  2.500,
      ( g, h, c, h ) : 12.500 } ;
 
    sf_flow := data { } ;
 
 
    p := data
    { ( a, b, a, b, a, h ) : 1,  ( a, b, b, e, a, h ) : 1,  ( a, b, e, f, a, h ) : 1,  ( a, b, f, h, a, h ) : 1,
      ( a, c, a, c, a, h ) : 1,  ( a, c, c, g, a, h ) : 1,  ( a, c, g, h, a, h ) : 1 } ;
 
